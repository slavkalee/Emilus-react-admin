{"version":3,"sources":["views/app-views/customer-list/CustomerView.js","components/shared-components/AvatarStatus/index.js","views/app-views/customer-list/index.js","redux/selectors/Customer.js"],"names":["UserView","state","loadings","enterLoading","index","setState","newLoadings","setTimeout","props","close","this","data","visible","width","placement","onClose","closable","className","size","src","img","name","email","dashed","UserOutlined","id","CalendarOutlined","company","MobileOutlined","phone","MailOutlined","CompassOutlined","address","city","street","GlobalOutlined","href","website","type","loading","onClick","Component","renderAvatar","text","AvatarStatus","suffix","subTitle","icon","shape","gap","onNameClick","UserList","dispatch","useDispatch","customers","useSelector","useState","customerProfileVisible","setCustomerProfileVisible","selectedCustomer","setSelectedCustomer","useEffect","fetchCustomers","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","username","length","elm","EyeOutlined","profile","danger","DeleteOutlined","removeCustomer","message","success","content","duration","bodyStyle","padding","style","height","margin","Loading","columns","dataSource","rowKey","CustomerView"],"mappings":"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","file":"static/js/13.5779600e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Avatar, Drawer, Divider, Button } from 'antd';\r\nimport {\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  UserOutlined,\r\n  CompassOutlined,\r\n  CalendarOutlined,\r\n  GlobalOutlined,\r\n} from '@ant-design/icons';\r\n\r\nexport class UserView extends Component {\r\n  state = {\r\n    loadings: [],\r\n  };\r\n\r\n  enterLoading = index => {\r\n    this.setState(({ loadings }) => {\r\n      const newLoadings = [...loadings];\r\n      newLoadings[index] = true;\r\n\r\n      return {\r\n        loadings: newLoadings,\r\n      };\r\n    });\r\n    setTimeout(() => {\r\n      this.setState(({ loadings }) => {\r\n        const newLoadings = [...loadings];\r\n        newLoadings[index] = false;\r\n\r\n        return {\r\n          loadings: newLoadings,\r\n        };\r\n      });\r\n      this.props.close();\r\n    }, 1500);\r\n  };\r\n\r\n  render() {\r\n    const { data, visible, close } = this.props;\r\n    const { loadings } = this.state;\r\n    return (\r\n      <Drawer\r\n        width={300}\r\n        placement=\"right\"\r\n        onClose={close}\r\n        closable={false}\r\n        visible={visible}\r\n      >\r\n        <div className=\"text-center mt-3\">\r\n          <Avatar size={80} src={data?.img} />\r\n          <h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n          <span className=\"text-muted\">{data?.email}</span>\r\n        </div>\r\n        <Divider dashed />\r\n        <div className=\"\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n          <p>\r\n            <UserOutlined />\r\n            <span className=\"ml-3 text-dark\">id: {data?.id}</span>\r\n          </p>\r\n          <p>\r\n            <CalendarOutlined />\r\n            <span className=\"ml-3 text-dark\">Work in {data?.company.name}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n          <p>\r\n            <MobileOutlined />\r\n            <span className=\"ml-3 text-dark\">{data?.phone}</span>\r\n          </p>\r\n          <p>\r\n            <MailOutlined />\r\n            <span className=\"ml-3 text-dark\">\r\n              {data?.email ? data?.email : '-'}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <CompassOutlined />\r\n            <span className=\"ml-3 text-dark\">{`${data?.address.city}, ${data?.address.street}`}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">Website</h6>\r\n          <p>\r\n            <GlobalOutlined />\r\n            <a href=\"/#\" className=\"ml-3 text-dark\">\r\n              {data?.website ? data?.website : '-'}\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <Button\r\n            type=\"primary\"\r\n            loading={loadings[0]}\r\n            onClick={() => {\r\n              this.enterLoading(0);\r\n            }}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Table, Tooltip, message, Button } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport CustomerView from './CustomerView';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCustomers, removeCustomer } from 'redux/actions/Customer';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { getCustomers, getLoading } from 'redux/selectors/Customer';\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n  const customers = useSelector(getCustomers());\r\n  const loading = useSelector(getLoading());\r\n\r\n  const [customerProfileVisible, setCustomerProfileVisible] = useState(false);\r\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n\r\n    /* eslint-disable */\r\n    useEffect(() => {\r\n      dispatch(fetchCustomers());\r\n    }, []);\r\n    /* eslint-disable */\r\n\r\n  const deleteCustomer = id => {\r\n    dispatch(removeCustomer(id));\r\n    message.success({ content: `Deleted user ${id}`, duration: 2 });\r\n  };\r\n\r\n  const showProfile = profile => {\r\n    setCustomerProfileVisible(true);\r\n    setSelectedCustomer(profile);\r\n  };\r\n\r\n  const closeProfile = () => {\r\n    setCustomerProfileVisible(false);\r\n    setSelectedCustomer(null);\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">\r\n          <AvatarStatus\r\n            src={record.img}\r\n            name={record.name}\r\n            subTitle={record.email}\r\n          />\r\n        </div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.name.toLowerCase();\r\n          b = b.name.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'Username',\r\n      dataIndex: 'username',\r\n      sorter: {\r\n        compare: (a, b) => a.username.length - b.username.length,\r\n      },\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n      sorter: {\r\n        compare: (a, b) => a.phone.length - b.phone.length,\r\n      },\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'actions',\r\n      render: (_, elm) => (\r\n        <div className=\"text-right\">\r\n          <Tooltip title=\"View\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              icon={<EyeOutlined />}\r\n              onClick={() => {\r\n                showProfile(elm);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <Button\r\n              danger\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => {\r\n                deleteCustomer(elm.id);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card bodyStyle={{ padding: '0px' }}>\r\n      {loading ? (\r\n        <div style={{ height: '100%', margin: '50px 0' }}>\r\n          <Loading />\r\n        </div>\r\n      ) : (\r\n        <Table columns={tableColumns} dataSource={customers} rowKey=\"id\" />\r\n      )}\r\n      <CustomerView\r\n        data={selectedCustomer}\r\n        visible={customerProfileVisible}\r\n        close={() => {\r\n          closeProfile();\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","export const getCustomers = () => state => state.customers.data;\r\nexport const getLoading = () => state => state.customers.loading;\r\n"],"sourceRoot":""}